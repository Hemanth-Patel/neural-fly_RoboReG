In file included from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_core_inl.h:34:0,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_core.h:259,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/src/spherical_msf/./spherical_sensormanager.h:22,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/src/spherical_msf/main.cpp:17:
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_measurement_inl.h: In instantiation of ‘msf_core::MSF_MeasurementBase<EKFState_T>::MSF_MeasurementBase(bool, int, bool, double) [with EKFState_T = msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 5> >, msf_updates::StateDefinition>]’:
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:130:54:   required from ‘msf_core::MSF_Measurement<T, RMAT_T, EKFState_T>::MSF_Measurement(bool, int, bool, double) [with T = geometry_msgs::PointStamped_<std::allocator<void> >; RMAT_T = Eigen::Matrix<double, 2, 2>; EKFState_T = msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 5> >, msf_updates::StateDefinition>]’
/home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/include/msf_updates/spherical_position_sensor/spherical_measurement.h:91:33:   required from here
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:80:10: warning: ‘msf_core::MSF_MeasurementBase<msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 5> >, msf_updates::StateDefinition> >::mah_threshold_’ will be initialized after [-Wreorder]
   double mah_threshold_;
          ^~~~~~~~~~~~~~
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:49:10: warning:   ‘double msf_core::MSF_MeasurementBase<msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 5> >, msf_updates::StateDefinition> >::time’ [-Wreorder]
   double time;  ///< The time_ this measurement was taken.
          ^~~~
In file included from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:249:0,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_core_inl.h:34,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_core.h:259,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/src/spherical_msf/./spherical_sensormanager.h:22,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/src/spherical_msf/main.cpp:17:
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_measurement_inl.h:23:1: warning:   when initialized here [-Wreorder]
 MSF_MeasurementBase<EKFState_T>::MSF_MeasurementBase(bool isabsoluteMeasurement,
 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/include/msf_updates/pose_sensor_handler/pose_sensorhandler.h:86:0,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/src/pose_msf/pose_sensormanager.h:26,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/src/pose_msf/main.cpp:19:
/home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/include/msf_updates/pose_sensor_handler/implementation/pose_sensorhandler.hpp: In constructor ‘msf_pose_sensor::PoseSensorHandler<MEASUREMENT_TYPE, MANAGER_TYPE>::PoseSensorHandler(MANAGER_TYPE&, std::__cxx11::string, std::__cxx11::string, bool)’:
/home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/include/msf_updates/pose_sensor_handler/implementation/pose_sensorhandler.hpp:126:78: warning: ‘new’ of type ‘msf_updates::PoseDistorter’ with extended alignment 32 [-Waligned-new=]
                                        distortscale_mean, distortscale_stddev));
                                                                              ^
/home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/include/msf_updates/pose_sensor_handler/implementation/pose_sensorhandler.hpp:126:78: note: uses ‘void* operator new(std::size_t)’, which does not have an alignment parameter
/home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/include/msf_updates/pose_sensor_handler/implementation/pose_sensorhandler.hpp:126:78: note: use ‘-faligned-new’ to enable C++17 over-aligned new support
/home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/include/msf_updates/pose_sensor_handler/implementation/pose_sensorhandler.hpp: In instantiation of ‘msf_pose_sensor::PoseSensorHandler<MEASUREMENT_TYPE, MANAGER_TYPE>::PoseSensorHandler(MANAGER_TYPE&, std::__cxx11::string, std::__cxx11::string, bool) [with MEASUREMENT_TYPE = msf_updates::pose_measurement::PoseMeasurement<>; MANAGER_TYPE = msf_pose_sensor::PoseSensorManager; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
/home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/src/pose_msf/pose_sensormanager.h:57:70:   required from here
/home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/include/msf_updates/pose_sensor_handler/implementation/pose_sensorhandler.hpp:125:9: warning: ‘new’ of type ‘msf_updates::PoseDistorter’ with extended alignment 32 [-Waligned-new=]
         new msf_updates::PoseDistorter(meanpos, stddevpos, meanatt, stddevatt,
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                        distortscale_mean, distortscale_stddev));
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/include/msf_updates/pose_sensor_handler/implementation/pose_sensorhandler.hpp:125:9: note: uses ‘void* operator new(std::size_t)’, which does not have an alignment parameter
/home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/include/msf_updates/pose_sensor_handler/implementation/pose_sensorhandler.hpp:125:9: note: use ‘-faligned-new’ to enable C++17 over-aligned new support
In file included from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_core_inl.h:34:0,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_core.h:259,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/src/pose_msf/pose_sensormanager.h:22,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/src/pose_msf/main.cpp:19:
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_measurement_inl.h: In instantiation of ‘msf_core::MSF_MeasurementBase<EKFState_T>::MSF_MeasurementBase(bool, int, bool, double) [with EKFState_T = msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1>, 5, 2>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9> >, msf_updates::StateDefinition>]’:
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:174:80:   required from ‘msf_core::MSF_InitMeasurement<EKFState_T>::MSF_InitMeasurement(bool) [with EKFState_T = msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1>, 5, 2>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9> >, msf_updates::StateDefinition>]’
/home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/src/pose_msf/pose_sensormanager.h:213:66:   required from here
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:80:10: warning: ‘msf_core::MSF_MeasurementBase<msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1>, 5, 2>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9> >, msf_updates::StateDefinition> >::mah_threshold_’ will be initialized after [-Wreorder]
   double mah_threshold_;
          ^~~~~~~~~~~~~~
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:49:10: warning:   ‘double msf_core::MSF_MeasurementBase<msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1>, 5, 2>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9> >, msf_updates::StateDefinition> >::time’ [-Wreorder]
   double time;  ///< The time_ this measurement was taken.
          ^~~~
In file included from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:249:0,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_core_inl.h:34,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_core.h:259,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/src/pose_msf/pose_sensormanager.h:22,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/src/pose_msf/main.cpp:19:
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_measurement_inl.h:23:1: warning:   when initialized here [-Wreorder]
 MSF_MeasurementBase<EKFState_T>::MSF_MeasurementBase(bool isabsoluteMeasurement,
 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_sortedContainer.h:21:0,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_core.h:41,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/src/pose_msf/pose_sensormanager.h:22,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/src/pose_msf/main.cpp:19:
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_tools.h: In instantiation of ‘typename Eigen::MatrixBase<Derived>::Scalar msf_core::GetMedian(const Eigen::MatrixBase<Derived>&) [with D = Eigen::Block<Eigen::Matrix<double, 30, 4, 0, 30, 4>, 30, 1, false>; typename Eigen::MatrixBase<Derived>::Scalar = double]’:
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_checkFuzzyTracking.h:84:20:   required from ‘bool msf_core::CheckFuzzyTracking<EKFState_T, NONTEMPORALDRIFTINGTYPE>::Check(boost::shared_ptr<X>, EKFState_T&, double) [with EKFState_T = msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1>, 5, 2>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9> >, msf_updates::StateDefinition>; NONTEMPORALDRIFTINGTYPE = msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>&]’
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_core_inl.h:902:17:   required from ‘bool msf_core::MSF_Core<EKFState_T>::ApplyCorrection(boost::shared_ptr<X>&, msf_core::MSF_Core<EKFState_T>::ErrorState&, double) [with EKFState_T = msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1>, 5, 2>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9> >, msf_updates::StateDefinition>; msf_core::MSF_Core<EKFState_T>::ErrorState = Eigen::Matrix<double, 28, 1, 0, 28, 1>]’
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_measurement_inl.h:79:3:   required from ‘void msf_core::MSF_MeasurementBase<EKFState_T>::CalculateAndApplyCorrection(boost::shared_ptr<X>, msf_core::MSF_Core<EKFState_T>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<ScaleDerived>&) [with H_type = Eigen::Matrix<double, 7, 28>; Res_type = Eigen::Matrix<double, 7, 1>; R_type = Eigen::Matrix<double, 7, 7>; EKFState_T = msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1>, 5, 2>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9> >, msf_updates::StateDefinition>]’
/home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/include/msf_updates/pose_sensor_handler/pose_measurement.h:340:40:   required from ‘void msf_updates::pose_measurement::PoseMeasurement<StateLIdx, StateQicIdx, StatePicIdx, StateQwvIdx, StatePwvIdx>::Apply(boost::shared_ptr<msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1>, 5, 2>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9> >, msf_updates::StateDefinition> >, msf_core::MSF_Core<msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1>, 5, 2>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9> >, msf_updates::StateDefinition> >&) [with int StateLIdx = 5; int StateQicIdx = 8; int StatePicIdx = 9; int StateQwvIdx = 6; int StatePwvIdx = 7]’
/home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/src/pose_msf/main.cpp:29:1:   required from here
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_tools.h:38:3: warning: enum constant in boolean context [-Wint-in-bool-context]
   if (Eigen::MatrixBase<D>::SizeAtCompileTime) {
   ^~
In file included from /home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/include/msf_updates/pose_sensor_handler/pose_sensorhandler.h:86:0,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/src/pose_pressure_msf/pose_pressure_sensormanager.h:25,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/src/pose_pressure_msf/main.cpp:17:
/home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/include/msf_updates/pose_sensor_handler/implementation/pose_sensorhandler.hpp: In constructor ‘msf_pose_sensor::PoseSensorHandler<MEASUREMENT_TYPE, MANAGER_TYPE>::PoseSensorHandler(MANAGER_TYPE&, std::__cxx11::string, std::__cxx11::string, bool)’:
/home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/include/msf_updates/pose_sensor_handler/implementation/pose_sensorhandler.hpp:126:78: warning: ‘new’ of type ‘msf_updates::PoseDistorter’ with extended alignment 32 [-Waligned-new=]
                                        distortscale_mean, distortscale_stddev));
                                                                              ^
/home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/include/msf_updates/pose_sensor_handler/implementation/pose_sensorhandler.hpp:126:78: note: uses ‘void* operator new(std::size_t)’, which does not have an alignment parameter
/home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/include/msf_updates/pose_sensor_handler/implementation/pose_sensorhandler.hpp:126:78: note: use ‘-faligned-new’ to enable C++17 over-aligned new support
/home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/include/msf_updates/pose_sensor_handler/implementation/pose_sensorhandler.hpp: In instantiation of ‘msf_pose_sensor::PoseSensorHandler<MEASUREMENT_TYPE, MANAGER_TYPE>::PoseSensorHandler(MANAGER_TYPE&, std::__cxx11::string, std::__cxx11::string, bool) [with MEASUREMENT_TYPE = msf_updates::pose_measurement::PoseMeasurement<>; MANAGER_TYPE = msf_pose_pressure_sensor::PosePressureSensorManager; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
/home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/src/pose_pressure_msf/pose_pressure_sensormanager.h:55:77:   required from here
/home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/include/msf_updates/pose_sensor_handler/implementation/pose_sensorhandler.hpp:125:9: warning: ‘new’ of type ‘msf_updates::PoseDistorter’ with extended alignment 32 [-Waligned-new=]
         new msf_updates::PoseDistorter(meanpos, stddevpos, meanatt, stddevatt,
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                        distortscale_mean, distortscale_stddev));
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/include/msf_updates/pose_sensor_handler/implementation/pose_sensorhandler.hpp:125:9: note: uses ‘void* operator new(std::size_t)’, which does not have an alignment parameter
/home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/include/msf_updates/pose_sensor_handler/implementation/pose_sensorhandler.hpp:125:9: note: use ‘-faligned-new’ to enable C++17 over-aligned new support
In file included from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_core_inl.h:34:0,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_core.h:259,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_sensormanager_inl.h:21,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_sensormanager.h:149,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_sensormanagerROS.h:35,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/src/pose_pressure_msf/pose_pressure_sensormanager.h:21,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/src/pose_pressure_msf/main.cpp:17:
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_measurement_inl.h: In instantiation of ‘msf_core::MSF_MeasurementBase<EKFState_T>::MSF_MeasurementBase(bool, int, bool, double) [with EKFState_T = msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1>, 5>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1>, 10> >, msf_updates::StateDefinition>]’:
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:130:54:   required from ‘msf_core::MSF_Measurement<T, RMAT_T, EKFState_T>::MSF_Measurement(bool, int, bool, double) [with T = geometry_msgs::PointStamped_<std::allocator<void> >; RMAT_T = Eigen::Matrix<double, 1, 1>; EKFState_T = msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1>, 5>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1>, 10> >, msf_updates::StateDefinition>]’
/home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/include/msf_updates/pressure_sensor_handler/pressure_measurement.h:66:19:   required from here
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:80:10: warning: ‘msf_core::MSF_MeasurementBase<msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1>, 5>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1>, 10> >, msf_updates::StateDefinition> >::mah_threshold_’ will be initialized after [-Wreorder]
   double mah_threshold_;
          ^~~~~~~~~~~~~~
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:49:10: warning:   ‘double msf_core::MSF_MeasurementBase<msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1>, 5>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1>, 10> >, msf_updates::StateDefinition> >::time’ [-Wreorder]
   double time;  ///< The time_ this measurement was taken.
          ^~~~
In file included from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:249:0,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_core_inl.h:34,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_core.h:259,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_sensormanager_inl.h:21,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_sensormanager.h:149,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_sensormanagerROS.h:35,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/src/pose_pressure_msf/pose_pressure_sensormanager.h:21,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/src/pose_pressure_msf/main.cpp:17:
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_measurement_inl.h:23:1: warning:   when initialized here [-Wreorder]
 MSF_MeasurementBase<EKFState_T>::MSF_MeasurementBase(bool isabsoluteMeasurement,
 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_sortedContainer.h:21:0,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_core.h:41,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_sensormanager_inl.h:21,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_sensormanager.h:149,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_sensormanagerROS.h:35,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/src/pose_pressure_msf/pose_pressure_sensormanager.h:21,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/src/pose_pressure_msf/main.cpp:17:
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_tools.h: In instantiation of ‘typename Eigen::MatrixBase<Derived>::Scalar msf_core::GetMedian(const Eigen::MatrixBase<Derived>&) [with D = Eigen::Block<Eigen::Matrix<double, 30, 4, 0, 30, 4>, 30, 1, false>; typename Eigen::MatrixBase<Derived>::Scalar = double]’:
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_checkFuzzyTracking.h:84:20:   required from ‘bool msf_core::CheckFuzzyTracking<EKFState_T, NONTEMPORALDRIFTINGTYPE>::Check(boost::shared_ptr<X>, EKFState_T&, double) [with EKFState_T = msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1>, 5>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1>, 10> >, msf_updates::StateDefinition>; NONTEMPORALDRIFTINGTYPE = msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>&]’
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_core_inl.h:902:17:   required from ‘bool msf_core::MSF_Core<EKFState_T>::ApplyCorrection(boost::shared_ptr<X>&, msf_core::MSF_Core<EKFState_T>::ErrorState&, double) [with EKFState_T = msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1>, 5>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1>, 10> >, msf_updates::StateDefinition>; msf_core::MSF_Core<EKFState_T>::ErrorState = Eigen::Matrix<double, 29, 1, 0, 29, 1>]’
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_measurement_inl.h:79:3:   required from ‘void msf_core::MSF_MeasurementBase<EKFState_T>::CalculateAndApplyCorrection(boost::shared_ptr<X>, msf_core::MSF_Core<EKFState_T>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<ScaleDerived>&) [with H_type = Eigen::Matrix<double, 1, 29>; Res_type = Eigen::Matrix<double, 1, 1>; R_type = Eigen::Matrix<double, 1, 1>; EKFState_T = msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1>, 5>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1>, 10> >, msf_updates::StateDefinition>]’
/home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/include/msf_updates/pressure_sensor_handler/pressure_measurement.h:113:78:   required from here
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_tools.h:38:3: warning: enum constant in boolean context [-Wint-in-bool-context]
   if (Eigen::MatrixBase<D>::SizeAtCompileTime) {
   ^~
In file included from /home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/include/msf_updates/pose_sensor_handler/pose_sensorhandler.h:86:0,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/src/position_pose_msf/position_pose_sensormanager.h:26,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/src/position_pose_msf/main.cpp:17:
/home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/include/msf_updates/pose_sensor_handler/implementation/pose_sensorhandler.hpp: In constructor ‘msf_pose_sensor::PoseSensorHandler<MEASUREMENT_TYPE, MANAGER_TYPE>::PoseSensorHandler(MANAGER_TYPE&, std::__cxx11::string, std::__cxx11::string, bool)’:
/home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/include/msf_updates/pose_sensor_handler/implementation/pose_sensorhandler.hpp:126:78: warning: ‘new’ of type ‘msf_updates::PoseDistorter’ with extended alignment 32 [-Waligned-new=]
                                        distortscale_mean, distortscale_stddev));
                                                                              ^
/home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/include/msf_updates/pose_sensor_handler/implementation/pose_sensorhandler.hpp:126:78: note: uses ‘void* operator new(std::size_t)’, which does not have an alignment parameter
/home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/include/msf_updates/pose_sensor_handler/implementation/pose_sensorhandler.hpp:126:78: note: use ‘-faligned-new’ to enable C++17 over-aligned new support
/home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/include/msf_updates/pose_sensor_handler/implementation/pose_sensorhandler.hpp: In instantiation of ‘msf_pose_sensor::PoseSensorHandler<MEASUREMENT_TYPE, MANAGER_TYPE>::PoseSensorHandler(MANAGER_TYPE&, std::__cxx11::string, std::__cxx11::string, bool) [with MEASUREMENT_TYPE = msf_updates::pose_measurement::PoseMeasurement<>; MANAGER_TYPE = msf_updates::PositionPoseSensorManager; std::__cxx11::string = std::__cxx11::basic_string<char>]’:
/home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/src/position_pose_msf/position_pose_sensormanager.h:63:70:   required from here
/home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/include/msf_updates/pose_sensor_handler/implementation/pose_sensorhandler.hpp:125:9: warning: ‘new’ of type ‘msf_updates::PoseDistorter’ with extended alignment 32 [-Waligned-new=]
         new msf_updates::PoseDistorter(meanpos, stddevpos, meanatt, stddevatt,
         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                        distortscale_mean, distortscale_stddev));
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/include/msf_updates/pose_sensor_handler/implementation/pose_sensorhandler.hpp:125:9: note: uses ‘void* operator new(std::size_t)’, which does not have an alignment parameter
/home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/include/msf_updates/pose_sensor_handler/implementation/pose_sensorhandler.hpp:125:9: note: use ‘-faligned-new’ to enable C++17 over-aligned new support
In file included from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_core_inl.h:34:0,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_core.h:259,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/src/position_pose_msf/position_pose_sensormanager.h:22,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/src/position_pose_msf/main.cpp:17:
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_measurement_inl.h: In instantiation of ‘msf_core::MSF_MeasurementBase<EKFState_T>::MSF_MeasurementBase(bool, int, bool, double) [with EKFState_T = msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1>, 5>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 10> >, msf_updates::StateDefinition>]’:
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:130:54:   required from ‘msf_core::MSF_Measurement<T, RMAT_T, EKFState_T>::MSF_Measurement(bool, int, bool, double) [with T = sensor_fusion_comm::PointWithCovarianceStamped_<std::allocator<void> >; RMAT_T = Eigen::Matrix<double, 3, 3>; EKFState_T = msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1>, 5>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 10> >, msf_updates::StateDefinition>]’
/home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/include/msf_updates/position_sensor_handler/position_measurement.h:95:33:   required from here
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:80:10: warning: ‘msf_core::MSF_MeasurementBase<msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1>, 5>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 10> >, msf_updates::StateDefinition> >::mah_threshold_’ will be initialized after [-Wreorder]
   double mah_threshold_;
          ^~~~~~~~~~~~~~
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:49:10: warning:   ‘double msf_core::MSF_MeasurementBase<msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1>, 5>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 10> >, msf_updates::StateDefinition> >::time’ [-Wreorder]
   double time;  ///< The time_ this measurement was taken.
          ^~~~
In file included from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:249:0,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_core_inl.h:34,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_core.h:259,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/src/position_pose_msf/position_pose_sensormanager.h:22,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/src/position_pose_msf/main.cpp:17:
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_measurement_inl.h:23:1: warning:   when initialized here [-Wreorder]
 MSF_MeasurementBase<EKFState_T>::MSF_MeasurementBase(bool isabsoluteMeasurement,
 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_sortedContainer.h:21:0,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_core.h:41,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/src/position_pose_msf/position_pose_sensormanager.h:22,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/src/position_pose_msf/main.cpp:17:
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_tools.h: In instantiation of ‘typename Eigen::MatrixBase<Derived>::Scalar msf_core::GetMedian(const Eigen::MatrixBase<Derived>&) [with D = Eigen::Block<Eigen::Matrix<double, 30, 4, 0, 30, 4>, 30, 1, false>; typename Eigen::MatrixBase<Derived>::Scalar = double]’:
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_checkFuzzyTracking.h:84:20:   required from ‘bool msf_core::CheckFuzzyTracking<EKFState_T, NONTEMPORALDRIFTINGTYPE>::Check(boost::shared_ptr<X>, EKFState_T&, double) [with EKFState_T = msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1>, 5>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 10> >, msf_updates::StateDefinition>; NONTEMPORALDRIFTINGTYPE = msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>&]’
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_core_inl.h:902:17:   required from ‘bool msf_core::MSF_Core<EKFState_T>::ApplyCorrection(boost::shared_ptr<X>&, msf_core::MSF_Core<EKFState_T>::ErrorState&, double) [with EKFState_T = msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1>, 5>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 10> >, msf_updates::StateDefinition>; msf_core::MSF_Core<EKFState_T>::ErrorState = Eigen::Matrix<double, 31, 1, 0, 31, 1>]’
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_measurement_inl.h:79:3:   required from ‘void msf_core::MSF_MeasurementBase<EKFState_T>::CalculateAndApplyCorrection(boost::shared_ptr<X>, msf_core::MSF_Core<EKFState_T>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<ScaleDerived>&) [with H_type = Eigen::Matrix<double, 3, 31>; Res_type = Eigen::Matrix<double, 3, 1>; R_type = Eigen::Matrix<double, 3, 3>; EKFState_T = msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 1, 1>, 5>, msf_core::StateVar_T<Eigen::Quaternion<double>, 6, 3>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 7>, msf_core::StateVar_T<Eigen::Quaternion<double>, 8>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 9>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 10> >, msf_updates::StateDefinition>]’
/home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/include/msf_updates/position_sensor_handler/position_measurement.h:192:43:   required from here
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_tools.h:38:3: warning: enum constant in boolean context [-Wint-in-bool-context]
   if (Eigen::MatrixBase<D>::SizeAtCompileTime) {
   ^~
In file included from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_core_inl.h:34:0,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_core.h:259,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/src/position_msf/position_sensormanager.h:24,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/src/position_msf/main.cpp:19:
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_measurement_inl.h: In instantiation of ‘msf_core::MSF_MeasurementBase<EKFState_T>::MSF_MeasurementBase(bool, int, bool, double) [with EKFState_T = msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 5> >, msf_updates::StateDefinition>]’:
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:130:54:   required from ‘msf_core::MSF_Measurement<T, RMAT_T, EKFState_T>::MSF_Measurement(bool, int, bool, double) [with T = sensor_fusion_comm::PointWithCovarianceStamped_<std::allocator<void> >; RMAT_T = Eigen::Matrix<double, 3, 3>; EKFState_T = msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 5> >, msf_updates::StateDefinition>]’
/home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/include/msf_updates/position_sensor_handler/position_measurement.h:95:33:   required from here
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:80:10: warning: ‘msf_core::MSF_MeasurementBase<msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 5> >, msf_updates::StateDefinition> >::mah_threshold_’ will be initialized after [-Wreorder]
   double mah_threshold_;
          ^~~~~~~~~~~~~~
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:49:10: warning:   ‘double msf_core::MSF_MeasurementBase<msf_core::GenericState_T<boost::fusion::vector<msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 0, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 1, 0>, msf_core::StateVar_T<Eigen::Quaternion<double>, 2, 0>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 3, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 4, 1>, msf_core::StateVar_T<Eigen::Matrix<double, 3, 1>, 5> >, msf_updates::StateDefinition> >::time’ [-Wreorder]
   double time;  ///< The time_ this measurement was taken.
          ^~~~
In file included from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_measurement.h:249:0,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_core_inl.h:34,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/msf_core.h:259,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/src/position_msf/position_sensormanager.h:24,
                 from /home/hemanth/neural_fly/src/ethzasl_msf/msf_updates/src/position_msf/main.cpp:19:
/home/hemanth/neural_fly/src/ethzasl_msf/msf_core/include/msf_core/implementation/msf_measurement_inl.h:23:1: warning:   when initialized here [-Wreorder]
 MSF_MeasurementBase<EKFState_T>::MSF_MeasurementBase(bool isabsoluteMeasurement,
 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
