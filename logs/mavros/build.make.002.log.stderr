/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:40:24: error: ‘mavlink::common::MAV_TYPE’ has not been declared
 using mavlink::common::MAV_TYPE;
                        ^~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:41:24: error: ‘mavlink::common::MAV_AUTOPILOT’ has not been declared
 using mavlink::common::MAV_AUTOPILOT;
                        ^~~~~~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:42:24: error: ‘mavlink::common::MAV_STATE’ has not been declared
 using mavlink::common::MAV_STATE;
                        ^~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:139:2: error: ‘MAV_AUTOPILOT’ does not name a type
  MAV_AUTOPILOT autopilot;
  ^~~~~~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:140:2: error: ‘MAV_TYPE’ does not name a type; did you mean ‘LC_CTYPE’?
  MAV_TYPE type;
  ^~~~~~~~
  LC_CTYPE
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:142:2: error: ‘MAV_STATE’ does not name a type; did you mean ‘MOD_STATUS’?
  MAV_STATE system_status;
  ^~~~~~~~~
  MOD_STATUS
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp: In constructor ‘mavros::std_plugins::HeartbeatStatus::HeartbeatStatus(const string&, size_t)’:
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:61:3: error: class ‘mavros::std_plugins::HeartbeatStatus’ does not have any field named ‘autopilot’
   autopilot(MAV_AUTOPILOT::GENERIC),
   ^~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:61:13: error: ‘MAV_AUTOPILOT’ has not been declared
   autopilot(MAV_AUTOPILOT::GENERIC),
             ^~~~~~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:62:3: error: class ‘mavros::std_plugins::HeartbeatStatus’ does not have any field named ‘type’
   type(MAV_TYPE::GENERIC),
   ^~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:62:8: error: ‘MAV_TYPE’ has not been declared
   type(MAV_TYPE::GENERIC),
        ^~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:63:3: error: class ‘mavros::std_plugins::HeartbeatStatus’ does not have any field named ‘system_status’
   system_status(MAV_STATE::UNINIT)
   ^~~~~~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:63:17: error: ‘MAV_STATE’ has not been declared
   system_status(MAV_STATE::UNINIT)
                 ^~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp: In member function ‘void mavros::std_plugins::HeartbeatStatus::tick(uint8_t, uint8_t, std::__cxx11::string&, uint8_t)’:
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:88:3: error: ‘type’ was not declared in this scope
   type = static_cast<MAV_TYPE>(type_);
   ^~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:88:3: note: suggested alternatives:
In file included from /usr/include/boost/bind/bind.hpp:27:0,
                 from /usr/include/boost/bind.hpp:22,
                 from /opt/ros/melodic/include/ros/publisher.h:35,
                 from /opt/ros/melodic/include/ros/node_handle.h:32,
                 from /opt/ros/melodic/include/diagnostic_updater/diagnostic_updater.h:42,
                 from /home/hemanth/neural_fly/src/mavros/mavros/include/mavros/mavros_plugin.h:23,
                 from /home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:17:
/usr/include/boost/type.hpp:14:10: note:   ‘boost::type’
   struct type {};
          ^~~~
In file included from /usr/include/boost/bind.hpp:22:0,
                 from /opt/ros/melodic/include/ros/publisher.h:35,
                 from /opt/ros/melodic/include/ros/node_handle.h:32,
                 from /opt/ros/melodic/include/diagnostic_updater/diagnostic_updater.h:42,
                 from /home/hemanth/neural_fly/src/mavros/mavros/include/mavros/mavros_plugin.h:23,
                 from /home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:17:
/usr/include/boost/bind/bind.hpp:146:25: note:   ‘boost::_bi::type’
 template<class T> class type {};
                         ^~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:88:22: error: ‘MAV_TYPE’ does not name a type; did you mean ‘LC_CTYPE’?
   type = static_cast<MAV_TYPE>(type_);
                      ^~~~~~~~
                      LC_CTYPE
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:89:3: error: ‘autopilot’ was not declared in this scope
   autopilot = static_cast<MAV_AUTOPILOT>(autopilot_);
   ^~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:89:3: note: suggested alternative: ‘autopilot_’
   autopilot = static_cast<MAV_AUTOPILOT>(autopilot_);
   ^~~~~~~~~
   autopilot_
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:89:27: error: ‘MAV_AUTOPILOT’ does not name a type
   autopilot = static_cast<MAV_AUTOPILOT>(autopilot_);
                           ^~~~~~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:91:3: error: ‘system_status’ was not declared in this scope
   system_status = static_cast<MAV_STATE>(system_status_);
   ^~~~~~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:91:3: note: suggested alternative: ‘system_status_’
   system_status = static_cast<MAV_STATE>(system_status_);
   ^~~~~~~~~~~~~
   system_status_
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:91:31: error: ‘MAV_STATE’ does not name a type; did you mean ‘MOD_STATUS’?
   system_status = static_cast<MAV_STATE>(system_status_);
                               ^~~~~~~~~
                               MOD_STATUS
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp: In member function ‘virtual void mavros::std_plugins::HeartbeatStatus::run(diagnostic_updater::DiagnosticStatusWrapper&)’:
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:122:45: error: ‘type’ was not declared in this scope
   stat.add("Vehicle type", utils::to_string(type));
                                             ^~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:122:45: note: suggested alternatives:
In file included from /usr/include/boost/bind/bind.hpp:27:0,
                 from /usr/include/boost/bind.hpp:22,
                 from /opt/ros/melodic/include/ros/publisher.h:35,
                 from /opt/ros/melodic/include/ros/node_handle.h:32,
                 from /opt/ros/melodic/include/diagnostic_updater/diagnostic_updater.h:42,
                 from /home/hemanth/neural_fly/src/mavros/mavros/include/mavros/mavros_plugin.h:23,
                 from /home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:17:
/usr/include/boost/type.hpp:14:10: note:   ‘boost::type’
   struct type {};
          ^~~~
In file included from /usr/include/boost/bind.hpp:22:0,
                 from /opt/ros/melodic/include/ros/publisher.h:35,
                 from /opt/ros/melodic/include/ros/node_handle.h:32,
                 from /opt/ros/melodic/include/diagnostic_updater/diagnostic_updater.h:42,
                 from /home/hemanth/neural_fly/src/mavros/mavros/include/mavros/mavros_plugin.h:23,
                 from /home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:17:
/usr/include/boost/bind/bind.hpp:146:25: note:   ‘boost::_bi::type’
 template<class T> class type {};
                         ^~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:123:47: error: ‘autopilot’ was not declared in this scope
   stat.add("Autopilot type", utils::to_string(autopilot));
                                               ^~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:125:46: error: ‘system_status’ was not declared in this scope
   stat.add("System status", utils::to_string(system_status));
                                              ^~~~~~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp: At global scope:
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:533:2: error: ‘MAV_TYPE’ does not name a type; did you mean ‘LC_CTYPE’?
  MAV_TYPE conn_heartbeat_mav_type;
  ^~~~~~~~
  LC_CTYPE
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:687:85: error: ‘mavlink::common::msg::HEARTBEAT’ has not been declared
  void handle_heartbeat(const mavlink::mavlink_message_t *msg, mavlink::common::msg::HEARTBEAT &hb)
                                                                                     ^~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp: In constructor ‘mavros::std_plugins::SystemStatusPlugin::SystemStatusPlugin()’:
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:429:3: error: class ‘mavros::std_plugins::SystemStatusPlugin’ does not have any field named ‘conn_heartbeat_mav_type’
   conn_heartbeat_mav_type(MAV_TYPE::ONBOARD_CONTROLLER)
   ^~~~~~~~~~~~~~~~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:429:27: error: ‘MAV_TYPE’ has not been declared
   conn_heartbeat_mav_type(MAV_TYPE::ONBOARD_CONTROLLER)
                           ^~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp: In member function ‘virtual void mavros::std_plugins::SystemStatusPlugin::initialize(mavros::UAS&)’:
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:454:4: error: ‘conn_heartbeat_mav_type’ was not declared in this scope
    conn_heartbeat_mav_type = utils::mav_type_from_str(conn_heartbeat_mav_type_str);
    ^~~~~~~~~~~~~~~~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:454:4: note: suggested alternative: ‘conn_heartbeat_mav_type_str’
    conn_heartbeat_mav_type = utils::mav_type_from_str(conn_heartbeat_mav_type_str);
    ^~~~~~~~~~~~~~~~~~~~~~~
    conn_heartbeat_mav_type_str
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp: In member function ‘void mavros::std_plugins::SystemStatusPlugin::publish_disconnection()’:
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:680:41: error: ‘MAV_STATE’ has not been declared
   state_msg->system_status = enum_value(MAV_STATE::UNINIT);
                                         ^~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp: In member function ‘void mavros::std_plugins::SystemStatusPlugin::handle_heartbeat(const mavlink_message_t*, int&)’:
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:689:26: error: ‘mavlink::common::MAV_MODE_FLAG’ has not been declared
   using mavlink::common::MAV_MODE_FLAG;
                          ^~~~~~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:694:46: error: request for member ‘base_mode’ in ‘hb’, which is of non-class type ‘int’
   auto vehicle_mode = m_uas->str_mode_v10(hb.base_mode, hb.custom_mode);
                                              ^~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:694:60: error: request for member ‘custom_mode’ in ‘hb’, which is of non-class type ‘int’
   auto vehicle_mode = m_uas->str_mode_v10(hb.base_mode, hb.custom_mode);
                                                            ^~~~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:700:29: error: request for member ‘autopilot’ in ‘hb’, which is of non-class type ‘int’
   it->second.autopilot = hb.autopilot;
                             ^~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:701:24: error: request for member ‘type’ in ‘hb’, which is of non-class type ‘int’
   it->second.type = hb.type;
                        ^~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:702:33: error: request for member ‘system_status’ in ‘hb’, which is of non-class type ‘int’
   it->second.system_status = hb.system_status;
                                 ^~~~~~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:703:29: error: request for member ‘base_mode’ in ‘hb’, which is of non-class type ‘int’
   it->second.base_mode = hb.base_mode;
                             ^~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:704:31: error: request for member ‘custom_mode’ in ‘hb’, which is of non-class type ‘int’
   it->second.custom_mode = hb.custom_mode;
                               ^~~~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:707:12: error: request for member ‘base_mode’ in ‘hb’, which is of non-class type ‘int’
   if (!(hb.base_mode & enum_value(MAV_MODE_FLAG::CUSTOM_MODE_ENABLED))) {
            ^~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:707:35: error: ‘MAV_MODE_FLAG’ has not been declared
   if (!(hb.base_mode & enum_value(MAV_MODE_FLAG::CUSTOM_MODE_ENABLED))) {
                                   ^~~~~~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:708:28: error: request for member ‘base_mode’ in ‘hb’, which is of non-class type ‘int’
    it->second.mode_id = hb.base_mode;
                            ^~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:710:28: error: request for member ‘custom_mode’ in ‘hb’, which is of non-class type ‘int’
    it->second.mode_id = hb.custom_mode;
                            ^~~~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:720:30: error: request for member ‘type’ in ‘hb’, which is of non-class type ‘int’
   m_uas->update_heartbeat(hb.type, hb.autopilot, hb.base_mode);
                              ^~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:720:39: error: request for member ‘autopilot’ in ‘hb’, which is of non-class type ‘int’
   m_uas->update_heartbeat(hb.type, hb.autopilot, hb.base_mode);
                                       ^~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:720:53: error: request for member ‘base_mode’ in ‘hb’, which is of non-class type ‘int’
   m_uas->update_heartbeat(hb.type, hb.autopilot, hb.base_mode);
                                                     ^~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:729:28: error: request for member ‘base_mode’ in ‘hb’, which is of non-class type ‘int’
   state_msg->armed = !!(hb.base_mode & enum_value(MAV_MODE_FLAG::SAFETY_ARMED));
                            ^~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:729:51: error: ‘MAV_MODE_FLAG’ has not been declared
   state_msg->armed = !!(hb.base_mode & enum_value(MAV_MODE_FLAG::SAFETY_ARMED));
                                                   ^~~~~~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:730:29: error: request for member ‘base_mode’ in ‘hb’, which is of non-class type ‘int’
   state_msg->guided = !!(hb.base_mode & enum_value(MAV_MODE_FLAG::GUIDED_ENABLED));
                             ^~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:730:52: error: ‘MAV_MODE_FLAG’ has not been declared
   state_msg->guided = !!(hb.base_mode & enum_value(MAV_MODE_FLAG::GUIDED_ENABLED));
                                                    ^~~~~~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:731:35: error: request for member ‘base_mode’ in ‘hb’, which is of non-class type ‘int’
   state_msg->manual_input = !!(hb.base_mode & enum_value(MAV_MODE_FLAG::MANUAL_INPUT_ENABLED));
                                   ^~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:731:58: error: ‘MAV_MODE_FLAG’ has not been declared
   state_msg->manual_input = !!(hb.base_mode & enum_value(MAV_MODE_FLAG::MANUAL_INPUT_ENABLED));
                                                          ^~~~~~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:733:33: error: request for member ‘system_status’ in ‘hb’, which is of non-class type ‘int’
   state_msg->system_status = hb.system_status;
                                 ^~~~~~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:736:19: error: request for member ‘type’ in ‘hb’, which is of non-class type ‘int’
   hb_diag.tick(hb.type, hb.autopilot, state_msg->mode, hb.system_status);
                   ^~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:736:28: error: request for member ‘autopilot’ in ‘hb’, which is of non-class type ‘int’
   hb_diag.tick(hb.type, hb.autopilot, state_msg->mode, hb.system_status);
                            ^~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:736:59: error: request for member ‘system_status’ in ‘hb’, which is of non-class type ‘int’
   hb_diag.tick(hb.type, hb.autopilot, state_msg->mode, hb.system_status);
                                                           ^~~~~~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp: In member function ‘void mavros::std_plugins::SystemStatusPlugin::heartbeat_cb(const ros::TimerEvent&)’:
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:922:25: error: ‘HEARTBEAT’ is not a member of ‘mavlink::common::msg’
   mavlink::common::msg::HEARTBEAT hb {};
                         ^~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:922:25: note: suggested alternative:
In file included from /opt/ros/melodic/include/mavlink/v2.0/common/../standard/../minimal/minimal.hpp:312:0,
                 from /opt/ros/melodic/include/mavlink/v2.0/common/../standard/standard.hpp:42,
                 from /opt/ros/melodic/include/mavlink/v2.0/common/common.hpp:2674,
                 from /home/hemanth/neural_fly/src/mavros/libmavconn/include/mavconn/mavlink_dialect.h:26,
                 from /home/hemanth/neural_fly/src/mavros/libmavconn/include/mavconn/interface.h:37,
                 from /home/hemanth/neural_fly/src/mavros/mavros/include/mavros/mavros_plugin.h:24,
                 from /home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:17:
/opt/ros/melodic/include/mavlink/v2.0/common/../standard/../minimal/./mavlink_msg_heartbeat.hpp:14:8: note:   ‘mavlink::minimal::msg::HEARTBEAT’
 struct HEARTBEAT : mavlink::Message {
        ^~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:924:3: error: ‘hb’ was not declared in this scope
   hb.type = enum_value(conn_heartbeat_mav_type); //! @todo patch PX4 so it can also handle this type as datalink
   ^~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:924:24: error: ‘conn_heartbeat_mav_type’ was not declared in this scope
   hb.type = enum_value(conn_heartbeat_mav_type); //! @todo patch PX4 so it can also handle this type as datalink
                        ^~~~~~~~~~~~~~~~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:925:29: error: ‘MAV_AUTOPILOT’ has not been declared
   hb.autopilot = enum_value(MAV_AUTOPILOT::INVALID);
                             ^~~~~~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:928:33: error: ‘MAV_STATE’ has not been declared
   hb.system_status = enum_value(MAV_STATE::ACTIVE);
                                 ^~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp: In member function ‘bool mavros::std_plugins::SystemStatusPlugin::set_mode_cb(mavros_msgs::SetMode::Request&, mavros_msgs::SetMode::Response&)’:
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:1041:26: error: ‘mavlink::common::MAV_MODE_FLAG’ has not been declared
   using mavlink::common::MAV_MODE_FLAG;
                          ^~~~~~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:1057:51: error: ‘MAV_MODE_FLAG’ has not been declared
    base_mode |= (m_uas->get_armed()) ? enum_value(MAV_MODE_FLAG::SAFETY_ARMED) : 0;
                                                   ^~~~~~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:1058:55: error: ‘MAV_MODE_FLAG’ has not been declared
    base_mode |= (m_uas->get_hil_state()) ? enum_value(MAV_MODE_FLAG::HIL_ENABLED) : 0;
                                                       ^~~~~~~~~~~~~
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:1059:28: error: ‘MAV_MODE_FLAG’ has not been declared
    base_mode |= enum_value(MAV_MODE_FLAG::CUSTOM_MODE_ENABLED);
                            ^~~~~~~~~~~~~
In file included from /home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:17:0:
/home/hemanth/neural_fly/src/mavros/mavros/include/mavros/mavros_plugin.h: In instantiation of ‘mavros::plugin::PluginBase::HandlerInfo mavros::plugin::PluginBase::make_handler(void (_C::*)(const mavlink_message_t*, _T&)) [with _C = mavros::std_plugins::SystemStatusPlugin; _T = int; mavros::plugin::PluginBase::HandlerInfo = std::tuple<unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >; mavlink::mavlink_message_t = mavlink::__mavlink_message]’:
/home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:500:54:   required from here
/home/hemanth/neural_fly/src/mavros/mavros/include/mavros/mavros_plugin.h:103:14: error: ‘MSG_ID’ is not a member of ‘int’
   const auto id = _T::MSG_ID;
              ^~
/home/hemanth/neural_fly/src/mavros/mavros/include/mavros/mavros_plugin.h:104:14: error: ‘NAME’ is not a member of ‘int’
   const auto name = _T::NAME;
              ^~~~
/home/hemanth/neural_fly/src/mavros/mavros/include/mavros/mavros_plugin.h:119:3: error: no matching function for call to ‘std::tuple<unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::tuple(<brace-enclosed initializer list>)’
   };
   ^
In file included from /home/hemanth/neural_fly/src/mavros/mavros/include/mavros/mavros_plugin.h:20:0,
                 from /home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:17:
/usr/include/c++/7/tuple:828:11: note: candidate: template<class _Alloc, class _Dummy, class ... _UElements, typename std::enable_if<((std::_TC<((4 == sizeof... (_UElements)) && (! std::is_same<std::tuple<unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >, std::tuple<_Tail ...> >::value)), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_MoveConstructibleTuple<_UElements ...>() && (! std::_TC<((4 == sizeof... (_UElements)) && (! std::is_same<std::tuple<unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >, std::tuple<_Tail ...> >::value)), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_ImplicitlyMoveConvertibleTuple<_UElements ...>())) && std::_TC<(std::is_same<_Dummy, void>::value && (4 == 1)), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_NonNestedTuple<tuple<_Tail ...>&&>()), bool>::type <anonymous> > std::tuple<_Elements>::tuple(std::allocator_arg_t, const _Alloc&, std::tuple<_Args2 ...>&&)
  explicit tuple(allocator_arg_t __tag, const _Alloc& __a,
           ^~~~~
/usr/include/c++/7/tuple:828:11: note:   template argument deduction/substitution failed:
/usr/include/c++/7/tuple:813:2: note: candidate: template<class _Alloc, class _Dummy, class ... _UElements, typename std::enable_if<((std::_TC<((4 == sizeof... (_UElements)) && (! std::is_same<std::tuple<unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >, std::tuple<_Tail ...> >::value)), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_MoveConstructibleTuple<_UElements ...>() && std::_TC<((4 == sizeof... (_UElements)) && (! std::is_same<std::tuple<unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >, std::tuple<_Tail ...> >::value)), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (4 == 1)), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_NonNestedTuple<tuple<_Tail ...>&&>()), bool>::type <anonymous> > std::tuple<_Elements>::tuple(std::allocator_arg_t, const _Alloc&, std::tuple<_Args2 ...>&&)
  tuple(allocator_arg_t __tag, const _Alloc& __a,
  ^~~~~
/usr/include/c++/7/tuple:813:2: note:   template argument deduction/substitution failed:
/usr/include/c++/7/tuple:798:11: note: candidate: template<class _Alloc, class _Dummy, class ... _UElements, typename std::enable_if<((std::_TC<((4 == sizeof... (_UElements)) && (! std::is_same<std::tuple<unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >, std::tuple<_Tail ...> >::value)), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_ConstructibleTuple<_UElements ...>() && (! std::_TC<((4 == sizeof... (_UElements)) && (! std::is_same<std::tuple<unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >, std::tuple<_Tail ...> >::value)), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_ImplicitlyConvertibleTuple<_UElements ...>())) && std::_TC<(std::is_same<_Dummy, void>::value && (4 == 1)), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_NonNestedTuple<tuple<_Tail ...>&&>()), bool>::type <anonymous> > std::tuple<_Elements>::tuple(std::allocator_arg_t, const _Alloc&, const std::tuple<_Args2 ...>&)
  explicit tuple(allocator_arg_t __tag, const _Alloc& __a,
           ^~~~~
/usr/include/c++/7/tuple:798:11: note:   template argument deduction/substitution failed:
/usr/include/c++/7/tuple:783:2: note: candidate: template<class _Alloc, class _Dummy, class ... _UElements, typename std::enable_if<((std::_TC<((4 == sizeof... (_UElements)) && (! std::is_same<std::tuple<unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >, std::tuple<_Tail ...> >::value)), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_ConstructibleTuple<_UElements ...>() && std::_TC<((4 == sizeof... (_UElements)) && (! std::is_same<std::tuple<unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >, std::tuple<_Tail ...> >::value)), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_ImplicitlyConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (4 == 1)), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_NonNestedTuple<tuple<_Tail ...>&&>()), bool>::type <anonymous> > std::tuple<_Elements>::tuple(std::allocator_arg_t, const _Alloc&, const std::tuple<_Args2 ...>&)
  tuple(allocator_arg_t __tag, const _Alloc& __a,
  ^~~~~
/usr/include/c++/7/tuple:783:2: note:   template argument deduction/substitution failed:
/usr/include/c++/7/tuple:771:2: note: candidate: template<class _Alloc> std::tuple<_Elements>::tuple(std::allocator_arg_t, const _Alloc&, std::tuple<_Elements>&&)
  tuple(allocator_arg_t __tag, const _Alloc& __a, tuple&& __in)
  ^~~~~
/usr/include/c++/7/tuple:771:2: note:   template argument deduction/substitution failed:
/usr/include/c++/7/tuple:767:2: note: candidate: template<class _Alloc> std::tuple<_Elements>::tuple(std::allocator_arg_t, const _Alloc&, const std::tuple<_Elements>&)
  tuple(allocator_arg_t __tag, const _Alloc& __a, const tuple& __in)
  ^~~~~
/usr/include/c++/7/tuple:767:2: note:   template argument deduction/substitution failed:
/usr/include/c++/7/tuple:761:11: note: candidate: template<class _Alloc, class ... _UElements, typename std::enable_if<(std::_TC<((4 == sizeof... (_UElements)) && std::_TC<(sizeof... (_UElements) == 1), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_NotSameTuple<_UElements ...>()), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_MoveConstructibleTuple<_UElements ...>() && (! std::_TC<((4 == sizeof... (_UElements)) && std::_TC<(sizeof... (_UElements) == 1), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_NotSameTuple<_UElements ...>()), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_ImplicitlyMoveConvertibleTuple<_UElements ...>())), bool>::type <anonymous> > std::tuple<_Elements>::tuple(std::allocator_arg_t, const _Alloc&, _UElements&& ...)
  explicit tuple(allocator_arg_t __tag, const _Alloc& __a,
           ^~~~~
/usr/include/c++/7/tuple:761:11: note:   template argument deduction/substitution failed:
/usr/include/c++/7/tuple:750:2: note: candidate: template<class _Alloc, class ... _UElements, typename std::enable_if<(std::_TC<((4 == sizeof... (_UElements)) && std::_TC<(sizeof... (_UElements) == 1), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_NotSameTuple<_UElements ...>()), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_MoveConstructibleTuple<_UElements ...>() && std::_TC<((4 == sizeof... (_UElements)) && std::_TC<(sizeof... (_UElements) == 1), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_NotSameTuple<_UElements ...>()), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_ImplicitlyMoveConvertibleTuple<_UElements ...>()), bool>::type <anonymous> > std::tuple<_Elements>::tuple(std::allocator_arg_t, const _Alloc&, _UElements&& ...)
  tuple(allocator_arg_t __tag, const _Alloc& __a,
  ^~~~~
/usr/include/c++/7/tuple:750:2: note:   template argument deduction/substitution failed:
/usr/include/c++/7/tuple:740:11: note: candidate: template<class _Alloc, class _Dummy, typename std::enable_if<(std::_TC<std::is_same<_Dummy, void>::value, unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_ConstructibleTuple<unsigned int, const char*, long unsigned int, function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >() && (! std::_TC<std::is_same<_Dummy, void>::value, unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_ImplicitlyConvertibleTuple<unsigned int, const char*, long unsigned int, function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >())), bool>::type <anonymous> > std::tuple<_Elements>::tuple(std::allocator_arg_t, const _Alloc&, const _Elements& ...)
  explicit tuple(allocator_arg_t __tag, const _Alloc& __a,
           ^~~~~
/usr/include/c++/7/tuple:740:11: note:   template argument deduction/substitution failed:
/usr/include/c++/7/tuple:729:2: note: candidate: template<class _Alloc, class _Dummy, typename std::enable_if<(std::_TC<std::is_same<_Dummy, void>::value, unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_ConstructibleTuple<unsigned int, const char*, long unsigned int, function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >() && std::_TC<std::is_same<_Dummy, void>::value, unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_ImplicitlyConvertibleTuple<unsigned int, const char*, long unsigned int, function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >()), bool>::type <anonymous> > std::tuple<_Elements>::tuple(std::allocator_arg_t, const _Alloc&, const _Elements& ...)
  tuple(allocator_arg_t __tag, const _Alloc& __a,
  ^~~~~
/usr/include/c++/7/tuple:729:2: note:   template argument deduction/substitution failed:
/usr/include/c++/7/tuple:719:2: note: candidate: template<class _Alloc> std::tuple<_Elements>::tuple(std::allocator_arg_t, const _Alloc&)
  tuple(allocator_arg_t __tag, const _Alloc& __a)
  ^~~~~
/usr/include/c++/7/tuple:719:2: note:   template argument deduction/substitution failed:
/usr/include/c++/7/tuple:713:28: note: candidate: template<class ... _UElements, class _Dummy, typename std::enable_if<((std::_TC<((4 == sizeof... (_UElements)) && (! std::is_same<std::tuple<unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >, std::tuple<_Tps ...> >::value)), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_MoveConstructibleTuple<_UElements ...>() && (! std::_TC<((4 == sizeof... (_UElements)) && (! std::is_same<std::tuple<unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >, std::tuple<_Tps ...> >::value)), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_ImplicitlyMoveConvertibleTuple<_UElements ...>())) && std::_TC<(std::is_same<_Dummy, void>::value && (4 == 1)), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_NonNestedTuple<tuple<_Tps ...>&&>()), bool>::type <anonymous> > constexpr std::tuple<_Elements>::tuple(std::tuple<_Args1 ...>&&)
         explicit constexpr tuple(tuple<_UElements...>&& __in)
                            ^~~~~
/usr/include/c++/7/tuple:713:28: note:   template argument deduction/substitution failed:
/usr/include/c++/7/tuple:702:19: note: candidate: template<class ... _UElements, class _Dummy, typename std::enable_if<((std::_TC<((4 == sizeof... (_UElements)) && (! std::is_same<std::tuple<unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >, std::tuple<_Tps ...> >::value)), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_MoveConstructibleTuple<_UElements ...>() && std::_TC<((4 == sizeof... (_UElements)) && (! std::is_same<std::tuple<unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >, std::tuple<_Tps ...> >::value)), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (4 == 1)), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_NonNestedTuple<tuple<_Tps ...>&&>()), bool>::type <anonymous> > constexpr std::tuple<_Elements>::tuple(std::tuple<_Args1 ...>&&)
         constexpr tuple(tuple<_UElements...>&& __in)
                   ^~~~~
/usr/include/c++/7/tuple:702:19: note:   template argument deduction/substitution failed:
/usr/include/c++/7/tuple:690:28: note: candidate: template<class ... _UElements, class _Dummy, typename std::enable_if<((std::_TC<((4 == sizeof... (_UElements)) && (! std::is_same<std::tuple<unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >, std::tuple<_Tps ...> >::value)), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_ConstructibleTuple<_UElements ...>() && (! std::_TC<((4 == sizeof... (_UElements)) && (! std::is_same<std::tuple<unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >, std::tuple<_Tps ...> >::value)), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_ImplicitlyConvertibleTuple<_UElements ...>())) && std::_TC<(std::is_same<_Dummy, void>::value && (4 == 1)), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_NonNestedTuple<const tuple<_Tps ...>&>()), bool>::type <anonymous> > constexpr std::tuple<_Elements>::tuple(const std::tuple<_Args1 ...>&)
         explicit constexpr tuple(const tuple<_UElements...>& __in)
                            ^~~~~
/usr/include/c++/7/tuple:690:28: note:   template argument deduction/substitution failed:
/usr/include/c++/7/tuple:678:19: note: candidate: template<class ... _UElements, class _Dummy, typename std::enable_if<((std::_TC<((4 == sizeof... (_UElements)) && (! std::is_same<std::tuple<unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >, std::tuple<_Tps ...> >::value)), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_ConstructibleTuple<_UElements ...>() && std::_TC<((4 == sizeof... (_UElements)) && (! std::is_same<std::tuple<unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >, std::tuple<_Tps ...> >::value)), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_ImplicitlyConvertibleTuple<_UElements ...>()) && std::_TC<(std::is_same<_Dummy, void>::value && (4 == 1)), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_NonNestedTuple<const tuple<_Tps ...>&>()), bool>::type <anonymous> > constexpr std::tuple<_Elements>::tuple(const std::tuple<_Args1 ...>&)
         constexpr tuple(const tuple<_UElements...>& __in)
                   ^~~~~
/usr/include/c++/7/tuple:678:19: note:   template argument deduction/substitution failed:
/usr/include/c++/7/tuple:662:17: note: candidate: constexpr std::tuple<_Elements>::tuple(std::tuple<_Elements>&&) [with _Elements = {unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)>}]
       constexpr tuple(tuple&&) = default;
                 ^~~~~
/usr/include/c++/7/tuple:662:17: note:   candidate expects 1 argument, 4 provided
/usr/include/c++/7/tuple:660:17: note: candidate: std::tuple<_Elements>::tuple(const std::tuple<_Elements>&) [with _Elements = {unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)>}]
       constexpr tuple(const tuple&) = default;
                 ^~~~~
/usr/include/c++/7/tuple:660:17: note:   candidate expects 1 argument, 4 provided
/usr/include/c++/7/tuple:657:28: note: candidate: template<class ... _UElements, typename std::enable_if<((std::_TC<((4 == sizeof... (_UElements)) && std::_TC<(sizeof... (_UElements) == 1), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_NotSameTuple<_UElements ...>()), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_MoveConstructibleTuple<_UElements ...>() && (! std::_TC<((4 == sizeof... (_UElements)) && std::_TC<(sizeof... (_UElements) == 1), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_NotSameTuple<_UElements ...>()), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_ImplicitlyMoveConvertibleTuple<_UElements ...>())) && (4 >= 1)), bool>::type <anonymous> > constexpr std::tuple<_Elements>::tuple(_UElements&& ...)
         explicit constexpr tuple(_UElements&&... __elements)
                            ^~~~~
/usr/include/c++/7/tuple:657:28: note:   template argument deduction/substitution failed:
/usr/include/c++/7/tuple:646:19: note: candidate: template<class ... _UElements, typename std::enable_if<((std::_TC<((4 == sizeof... (_UElements)) && std::_TC<(sizeof... (_UElements) == 1), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_NotSameTuple<_UElements ...>()), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_MoveConstructibleTuple<_UElements ...>() && std::_TC<((4 == sizeof... (_UElements)) && std::_TC<(sizeof... (_UElements) == 1), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_NotSameTuple<_UElements ...>()), unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_ImplicitlyMoveConvertibleTuple<_UElements ...>()) && (4 >= 1)), bool>::type <anonymous> > constexpr std::tuple<_Elements>::tuple(_UElements&& ...)
         constexpr tuple(_UElements&&... __elements)
                   ^~~~~
/usr/include/c++/7/tuple:646:19: note:   template argument deduction/substitution failed:
/usr/include/c++/7/tuple:619:26: note: candidate: template<class _Dummy, typename std::enable_if<((std::_TC<std::is_same<_Dummy, void>::value, unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_ConstructibleTuple<unsigned int, const char*, long unsigned int, function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >() && (! std::_TC<std::is_same<_Dummy, void>::value, unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_ImplicitlyConvertibleTuple<unsigned int, const char*, long unsigned int, function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >())) && (4 >= 1)), bool>::type <anonymous> > constexpr std::tuple<_Elements>::tuple(const _Elements& ...)
       explicit constexpr tuple(const _Elements&... __elements)
                          ^~~~~
/usr/include/c++/7/tuple:619:26: note:   template argument deduction/substitution failed:
In file included from /home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:17:0:
/home/hemanth/neural_fly/src/mavros/mavros/include/mavros/mavros_plugin.h:119:3: note:   cannot convert ‘id’ (type ‘<type error>’) to type ‘const unsigned int&’
   };
   ^
In file included from /home/hemanth/neural_fly/src/mavros/mavros/include/mavros/mavros_plugin.h:20:0,
                 from /home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:17:
/usr/include/c++/7/tuple:608:19: note: candidate: template<class _Dummy, typename std::enable_if<((std::_TC<std::is_same<_Dummy, void>::value, unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_ConstructibleTuple<unsigned int, const char*, long unsigned int, function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >() && std::_TC<std::is_same<_Dummy, void>::value, unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_ImplicitlyConvertibleTuple<unsigned int, const char*, long unsigned int, function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >()) && (4 >= 1)), bool>::type <anonymous> > constexpr std::tuple<_Elements>::tuple(const _Elements& ...)
         constexpr tuple(const _Elements&... __elements)
                   ^~~~~
/usr/include/c++/7/tuple:608:19: note:   template argument deduction/substitution failed:
In file included from /home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:17:0:
/home/hemanth/neural_fly/src/mavros/mavros/include/mavros/mavros_plugin.h:119:3: note:   cannot convert ‘id’ (type ‘<type error>’) to type ‘const unsigned int&’
   };
   ^
In file included from /home/hemanth/neural_fly/src/mavros/mavros/include/mavros/mavros_plugin.h:20:0,
                 from /home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:17:
/usr/include/c++/7/tuple:591:26: note: candidate: template<class _Dummy, typename std::enable_if<(std::tuple<unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_TC2<_Dummy>::_DefaultConstructibleTuple() && (! std::tuple<unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_TC2<_Dummy>::_ImplicitlyDefaultConstructibleTuple())), bool>::type <anonymous> > constexpr std::tuple<_Elements>::tuple()
       explicit constexpr tuple()
                          ^~~~~
/usr/include/c++/7/tuple:591:26: note:   template argument deduction/substitution failed:
In file included from /home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:17:0:
/home/hemanth/neural_fly/src/mavros/mavros/include/mavros/mavros_plugin.h:119:3: note:   candidate expects 0 arguments, 4 provided
   };
   ^
In file included from /home/hemanth/neural_fly/src/mavros/mavros/include/mavros/mavros_plugin.h:20:0,
                 from /home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:17:
/usr/include/c++/7/tuple:581:17: note: candidate: template<class _Dummy, typename std::enable_if<std::tuple<unsigned int, const char*, long unsigned int, std::function<void(const mavlink::__mavlink_message*, mavconn::Framing)> >::_TC2<_Dummy>::_ImplicitlyDefaultConstructibleTuple(), bool>::type <anonymous> > constexpr std::tuple<_Elements>::tuple()
       constexpr tuple()
                 ^~~~~
/usr/include/c++/7/tuple:581:17: note:   template argument deduction/substitution failed:
In file included from /home/hemanth/neural_fly/src/mavros/mavros/src/plugins/sys_status.cpp:17:0:
/home/hemanth/neural_fly/src/mavros/mavros/include/mavros/mavros_plugin.h:119:3: note:   candidate expects 0 arguments, 4 provided
   };
   ^
make[2]: *** [CMakeFiles/mavros_plugins.dir/src/plugins/sys_status.cpp.o] Error 1
make[2]: *** Waiting for unfinished jobs....
make[1]: *** [CMakeFiles/mavros_plugins.dir/all] Error 2
make: *** [all] Error 2
